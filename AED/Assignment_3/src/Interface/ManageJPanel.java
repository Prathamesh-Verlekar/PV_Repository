/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.CarDetails;
import Business.CarDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prathamesh
 */
public class ManageJPanel extends javax.swing.JPanel {
    
    private JPanel startCardLayout;
    private CarDirectory carDirectory;
    //private CarDetails carDetails;
    /**
     * Creates new form ManageJPanel
     */
    ManageJPanel(JPanel startCardLayout, CarDirectory carDirectory) {
        initComponents();
        this.startCardLayout = startCardLayout;
        this.carDirectory = carDirectory;
        //this.carDetails=carDetails;
        populateTable();
    }
    
    private void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblCarDetails.getModel();
        dtm.setRowCount(0);
        for(CarDetails carDetails: carDirectory.getCarDetailsList())
        {
            Object[] row = new Object[4];
            row[0] = carDetails;
            row[1] = carDetails.getModelNumber();
            row[2] = carDetails.getAvailablity();
            row[3] = carDetails.getPrice();
            
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarDetails = new javax.swing.JTable();
        btnCitySearch = new javax.swing.JButton();
        txtCitySearch = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnBrandSearch = new javax.swing.JButton();
        txtBrandSearch = new javax.swing.JTextField();
        btnYearSearch = new javax.swing.JButton();
        txtYearSearch = new javax.swing.JTextField();
        btnSerialNumberSearch = new javax.swing.JButton();
        txtSerialNumberSearch = new javax.swing.JTextField();
        btnModellNumberSearch = new javax.swing.JButton();
        txtModelNumberSearch = new javax.swing.JTextField();
        btnUsedByUberSearch = new javax.swing.JButton();
        btnExiredSearch = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        lblMinSeats = new javax.swing.JLabel();
        txtMinSeats = new javax.swing.JTextField();
        lblMinSeats1 = new javax.swing.JLabel();
        txtMaxSeats = new javax.swing.JTextField();
        btnBasedOnSeats = new javax.swing.JButton();
        btnFirstAvailableCar = new javax.swing.JButton();
        btnLastUpdated = new javax.swing.JButton();
        txtLastUpdated = new javax.swing.JTextField();
        btnAvailableCar = new javax.swing.JButton();
        btnUnavailableCar = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 0, 0));

        tblCarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand Name", "Model Number", "Available", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarDetails);
        if (tblCarDetails.getColumnModel().getColumnCount() > 0) {
            tblCarDetails.getColumnModel().getColumn(0).setResizable(false);
            tblCarDetails.getColumnModel().getColumn(1).setResizable(false);
            tblCarDetails.getColumnModel().getColumn(2).setResizable(false);
            tblCarDetails.getColumnModel().getColumn(3).setResizable(false);
        }

        btnCitySearch.setBackground(new java.awt.Color(0, 0, 0));
        btnCitySearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCitySearch.setForeground(new java.awt.Color(0, 255, 255));
        btnCitySearch.setText("Search For City");
        btnCitySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCitySearchActionPerformed(evt);
            }
        });

        txtCitySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCitySearchActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBrandSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnBrandSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBrandSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnBrandSearch.setText("Search For Brand");
        btnBrandSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandSearchActionPerformed(evt);
            }
        });

        txtBrandSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrandSearchActionPerformed(evt);
            }
        });

        btnYearSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnYearSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnYearSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnYearSearch.setText("Search For Year");
        btnYearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearSearchActionPerformed(evt);
            }
        });

        txtYearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearSearchActionPerformed(evt);
            }
        });

        btnSerialNumberSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSerialNumberSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSerialNumberSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnSerialNumberSearch.setText("Search For Serial Number");
        btnSerialNumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumberSearchActionPerformed(evt);
            }
        });

        txtSerialNumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNumberSearchActionPerformed(evt);
            }
        });

        btnModellNumberSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnModellNumberSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnModellNumberSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnModellNumberSearch.setText("Search For Model Number");
        btnModellNumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModellNumberSearchActionPerformed(evt);
            }
        });

        txtModelNumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumberSearchActionPerformed(evt);
            }
        });

        btnUsedByUberSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnUsedByUberSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUsedByUberSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnUsedByUberSearch.setText("Used By Uber");
        btnUsedByUberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsedByUberSearchActionPerformed(evt);
            }
        });

        btnExiredSearch.setBackground(new java.awt.Color(255, 0, 0));
        btnExiredSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnExiredSearch.setForeground(new java.awt.Color(0, 255, 255));
        btnExiredSearch.setText("Expired Maintenance Certificate");
        btnExiredSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExiredSearchActionPerformed(evt);
            }
        });

        btnViewDetails.setBackground(new java.awt.Color(0, 0, 0));
        btnViewDetails.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnViewDetails.setForeground(new java.awt.Color(0, 255, 255));
        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        lblMinSeats.setBackground(new java.awt.Color(0, 0, 0));
        lblMinSeats.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMinSeats.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMinSeats.setText("Min Seats:");

        txtMinSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtMinSeats.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtMinSeats.setBorder(null);

        lblMinSeats1.setBackground(new java.awt.Color(0, 0, 0));
        lblMinSeats1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMinSeats1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMinSeats1.setText("Max Seats:");

        txtMaxSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtMaxSeats.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtMaxSeats.setBorder(null);

        btnBasedOnSeats.setBackground(new java.awt.Color(0, 0, 0));
        btnBasedOnSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBasedOnSeats.setForeground(new java.awt.Color(0, 255, 255));
        btnBasedOnSeats.setText("Filter based on Seats");
        btnBasedOnSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBasedOnSeatsActionPerformed(evt);
            }
        });

        btnFirstAvailableCar.setBackground(new java.awt.Color(0, 0, 0));
        btnFirstAvailableCar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnFirstAvailableCar.setForeground(new java.awt.Color(0, 255, 255));
        btnFirstAvailableCar.setText("First Available Car");
        btnFirstAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableCarActionPerformed(evt);
            }
        });

        btnLastUpdated.setBackground(new java.awt.Color(0, 0, 0));
        btnLastUpdated.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLastUpdated.setForeground(new java.awt.Color(0, 255, 255));
        btnLastUpdated.setText("Last Updated");
        btnLastUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastUpdatedActionPerformed(evt);
            }
        });

        txtLastUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdatedActionPerformed(evt);
            }
        });

        btnAvailableCar.setBackground(new java.awt.Color(0, 0, 0));
        btnAvailableCar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAvailableCar.setForeground(new java.awt.Color(0, 255, 255));
        btnAvailableCar.setText("Available Car List");
        btnAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableCarActionPerformed(evt);
            }
        });

        btnUnavailableCar.setBackground(new java.awt.Color(0, 0, 0));
        btnUnavailableCar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUnavailableCar.setForeground(new java.awt.Color(0, 255, 255));
        btnUnavailableCar.setText("Unavailable Car List");
        btnUnavailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnavailableCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnLastUpdated, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCitySearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBrandSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnYearSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSerialNumberSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModellNumberSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFirstAvailableCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUnavailableCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCitySearch, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtBrandSearch)
                            .addComponent(txtYearSearch)
                            .addComponent(txtSerialNumberSearch)
                            .addComponent(txtModelNumberSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAvailableCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLastUpdated))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblMinSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMinSeats1, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMinSeats, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(txtMaxSeats)))
                            .addComponent(btnExiredSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(btnUsedByUberSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBasedOnSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCitySearch)
                            .addComponent(txtCitySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewDetails))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBrandSearch)
                            .addComponent(txtBrandSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExiredSearch))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnYearSearch)
                            .addComponent(txtYearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUsedByUberSearch))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSerialNumberSearch)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMinSeats)
                                .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtSerialNumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnModellNumberSearch)
                        .addComponent(txtModelNumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMinSeats1)
                        .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBasedOnSeats)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirstAvailableCar)
                        .addComponent(btnAvailableCar)))
                .addGap(18, 18, 18)
                .addComponent(btnUnavailableCar)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLastUpdated)
                    .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addGap(138, 138, 138))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCitySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCitySearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCitySearchActionPerformed

    private void btnCitySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCitySearchActionPerformed
        // TODO add your handling code here:
        /*String availableCity = txtCitySearch.getText();
        CityFilteredJPanel panel = new CityFilteredJPanel(startCardLayout, carDirectory, availableCity);
        startCardLayout.add("ViewFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String availableCity = txtCitySearch.getText();
        ArrayList<CarDetails> searchCity = carDirectory.getCarDetailsList(availableCity);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchCity);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnCitySearchActionPerformed

    private void btnBrandSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandSearchActionPerformed
        // TODO add your handling code here:
        /* FilteredJPanel panel = new FilteredJPanel(startCardLayout, carDirectory, manufacturedBy);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String manufacturedBy = txtBrandSearch.getText();
        ArrayList<CarDetails> searchManufacturedBy = carDirectory.getCarDetailsList1(manufacturedBy);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchManufacturedBy);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);   
    }//GEN-LAST:event_btnBrandSearchActionPerformed

    private void txtBrandSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrandSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrandSearchActionPerformed

    private void btnYearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearSearchActionPerformed
        // TODO add your handling code here:
        /*int manufactureYear = Integer.parseInt(txtYearSearch.getText());
        YearFilteredJPanel panel = new YearFilteredJPanel(startCardLayout, carDirectory, manufactureYear);
        startCardLayout.add("YearFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        int manufactureYear = Integer.parseInt(txtYearSearch.getText());
        ArrayList<CarDetails> searchManufacturedYear = carDirectory.getYearCarDetailsList(manufactureYear);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchManufacturedYear);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnYearSearchActionPerformed

    private void txtYearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearSearchActionPerformed

    private void btnSerialNumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumberSearchActionPerformed
        // TODO add your handling code here:
        /*String serialNumber = txtSerialNumberSearch.getText();
        SerialNumberFilteredJPanel panel = new SerialNumberFilteredJPanel(startCardLayout, carDirectory, serialNumber);
        startCardLayout.add("SerialNumberFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String serialNumber = txtSerialNumberSearch.getText();
        ArrayList<CarDetails> searchSerialNumber = carDirectory.getSerialNumberCarDetailsList(serialNumber);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchSerialNumber);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnSerialNumberSearchActionPerformed

    private void txtSerialNumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNumberSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNumberSearchActionPerformed

    private void btnModellNumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModellNumberSearchActionPerformed
        // TODO add your handling code here:
        /*String modelNumber = txtModelNumberSearch.getText();
        ModelNumberFilteredJPanel panel = new ModelNumberFilteredJPanel(startCardLayout, carDirectory, modelNumber);
        startCardLayout.add("ModelNumberFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String modelNumber = txtModelNumberSearch.getText();
        ArrayList<CarDetails> searchModelNumber = carDirectory.getModelNumberCarDetailsList(modelNumber);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchModelNumber);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnModellNumberSearchActionPerformed

    private void txtModelNumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumberSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumberSearchActionPerformed

    private void btnUsedByUberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsedByUberSearchActionPerformed
        // TODO add your handling code here:
        /*String usedByUber = "Yes";
        UsedByUberFilteredJPanel panel = new UsedByUberFilteredJPanel(startCardLayout, carDirectory, usedByUber);
        startCardLayout.add("UsedByUberFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String usedByUber = "Yes";
        ArrayList<CarDetails> searchUsedByUber = carDirectory.getUsedByUberCarDetailsList(usedByUber);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchUsedByUber);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnUsedByUberSearchActionPerformed

    private void btnExiredSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExiredSearchActionPerformed
        // TODO add your handling code here:
        /*String expired = "Expired";
        ExpiredFilteredJPanel panel = new ExpiredFilteredJPanel(startCardLayout, carDirectory, expired);
        startCardLayout.add("ExpiredFilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        String expired = "Expired";
        ArrayList<CarDetails> searchExpired = carDirectory.getExpiredCarDetailsList(expired);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchExpired);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnExiredSearchActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCarDetails.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            CarDetails carDetails = (CarDetails) tblCarDetails.getValueAt(selectedRow, 0);
            ViewJPanel panel = new ViewJPanel(startCardLayout, carDetails, carDirectory);
            startCardLayout.add("ViewJPanel", panel);
            CardLayout layout = (CardLayout) startCardLayout.getLayout();
            layout.next(startCardLayout);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnBasedOnSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBasedOnSeatsActionPerformed
        // TODO add your handling code here:
        String minSeats = txtMinSeats.getText();
        String maxseats = txtMaxSeats.getText();
        int minS = minSeats.equals("") ? Integer.MIN_VALUE : Integer.parseInt(minSeats);
        int maxS = maxseats.equals("") ? Integer.MAX_VALUE : Integer.parseInt(maxseats);
        ArrayList<CarDetails> searchNoOfSeats = carDirectory.getSeatsCarDetailsList(minS, maxS);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchNoOfSeats);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
        /*String modelNumber = txtModelNumberSearch.getText();
        ArrayList<CarDetails> searchModelNumber = carDirectory.getModelNumberCarDetailsList(modelNumber);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchModelNumber);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);*/
        /*AbnormalJPanel abnormalPanel = new AbnormalJPanel(vsh,maxBp,minBp);
        SplitPane.setRightComponent(abnormalPanel);*/
    }//GEN-LAST:event_btnBasedOnSeatsActionPerformed

    private void btnFirstAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableCarActionPerformed
        // TODO add your handling code here:
        String firstAvailable = "Yes";
        ArrayList<CarDetails> searchFirstAvailable = carDirectory.getFirstCarDetailsList(firstAvailable);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchFirstAvailable);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnFirstAvailableCarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCarDetails.getSelectedRow();
        if(selectedRow >= 0)
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the car details", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION);
            {
                CarDetails carDetails = (CarDetails) tblCarDetails.getValueAt(selectedRow, 0);
                carDirectory.deleteCarDetails(carDetails);
                populateTable();
            }

        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnLastUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastUpdatedActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCarDetails.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            CarDetails carDetails = (CarDetails) tblCarDetails.getValueAt(selectedRow, 0);
            txtLastUpdated.setText(carDetails.getDate());
        }   
        
    }//GEN-LAST:event_btnLastUpdatedActionPerformed

    private void txtLastUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdatedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdatedActionPerformed

    private void btnAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableCarActionPerformed
        // TODO add your handling code here:
        String available = "Yes";
        ArrayList<CarDetails> searchAvailable = carDirectory.getAvailableCarDetailsList(available);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchAvailable);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnAvailableCarActionPerformed

    private void btnUnavailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnavailableCarActionPerformed
        // TODO add your handling code here:
        String unavailable = "Yes";
        ArrayList<CarDetails> searchUnavailable = carDirectory.getUnavailableCarDetailsList(unavailable);
        FilteredJPanel panel = new FilteredJPanel(startCardLayout,searchUnavailable);
        startCardLayout.add("FilteredJPanel",panel);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.next(startCardLayout);
    }//GEN-LAST:event_btnUnavailableCarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailableCar;
    private javax.swing.JButton btnBasedOnSeats;
    private javax.swing.JButton btnBrandSearch;
    private javax.swing.JButton btnCitySearch;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExiredSearch;
    private javax.swing.JButton btnFirstAvailableCar;
    private javax.swing.JButton btnLastUpdated;
    private javax.swing.JButton btnModellNumberSearch;
    private javax.swing.JButton btnSerialNumberSearch;
    private javax.swing.JButton btnUnavailableCar;
    private javax.swing.JButton btnUsedByUberSearch;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton btnYearSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JLabel lblMinSeats1;
    private javax.swing.JTable tblCarDetails;
    private javax.swing.JTextField txtBrandSearch;
    private javax.swing.JTextField txtCitySearch;
    private javax.swing.JTextField txtLastUpdated;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtModelNumberSearch;
    private javax.swing.JTextField txtSerialNumberSearch;
    private javax.swing.JTextField txtYearSearch;
    // End of variables declaration//GEN-END:variables
}
