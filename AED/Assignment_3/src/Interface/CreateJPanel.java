/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.CarDetails;
import Business.CarDirectory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Prathamesh
 */
public class CreateJPanel extends javax.swing.JPanel {

    private JPanel startCardLayout;
    private CarDirectory carDirectory;
    public String checkboxAvail;
    /**
     * Creates new form CreateJPanel
     */

    CreateJPanel(JPanel startCardLayout, CarDirectory carDirectory) {
        initComponents();
        this.startCardLayout = startCardLayout;
        this.carDirectory = carDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnValidOrExpired = new javax.swing.ButtonGroup();
        btnAvailableYesOrNo = new javax.swing.ButtonGroup();
        lblEnterDetails = new javax.swing.JLabel();
        lblCarType = new javax.swing.JLabel();
        lblManufacturedBy = new javax.swing.JLabel();
        txtManufacturedBy = new javax.swing.JTextField();
        lblModelNumber = new javax.swing.JLabel();
        txtModelNumber = new javax.swing.JTextField();
        lblSerialNumber = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        lblColor = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        lblAvailableCity = new javax.swing.JLabel();
        txtAvailableCity = new javax.swing.JTextField();
        lblEngNumber = new javax.swing.JLabel();
        txtEngineNumber = new javax.swing.JTextField();
        lblOdometerReading = new javax.swing.JLabel();
        txtOdometerReading = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblManufactureYear = new javax.swing.JLabel();
        txtManufactureYear = new javax.swing.JTextField();
        lblMaintenanceCertificate = new javax.swing.JLabel();
        lblAvailable = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtCarType = new javax.swing.JComboBox();
        txtValidOrNot = new javax.swing.JComboBox();
        lblUsedByUber = new javax.swing.JLabel();
        txtUsedYesOrNo = new javax.swing.JComboBox();
        lblNoOfSeats = new javax.swing.JLabel();
        txtNoOfSeats = new javax.swing.JTextField();
        checkBoxAvailable = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(102, 0, 0));

        lblEnterDetails.setBackground(new java.awt.Color(0, 0, 0));
        lblEnterDetails.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblEnterDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnterDetails.setText("Enter Details");

        lblCarType.setBackground(new java.awt.Color(0, 0, 0));
        lblCarType.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblCarType.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCarType.setText("Car Type:");

        lblManufacturedBy.setBackground(new java.awt.Color(0, 0, 0));
        lblManufacturedBy.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblManufacturedBy.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufacturedBy.setText("Brand Name:");

        txtManufacturedBy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtManufacturedBy.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtManufacturedBy.setBorder(null);

        lblModelNumber.setBackground(new java.awt.Color(0, 0, 0));
        lblModelNumber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblModelNumber.setText("Model Number:");

        txtModelNumber.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtModelNumber.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtModelNumber.setBorder(null);

        lblSerialNumber.setBackground(new java.awt.Color(0, 0, 0));
        lblSerialNumber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSerialNumber.setText("Serial Number:");

        txtSerialNumber.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtSerialNumber.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtSerialNumber.setBorder(null);

        lblColor.setBackground(new java.awt.Color(0, 0, 0));
        lblColor.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblColor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblColor.setText("Color:");

        txtColor.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtColor.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtColor.setBorder(null);

        lblAvailableCity.setBackground(new java.awt.Color(0, 0, 0));
        lblAvailableCity.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAvailableCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAvailableCity.setText("City Available:");

        txtAvailableCity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAvailableCity.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtAvailableCity.setBorder(null);

        lblEngNumber.setBackground(new java.awt.Color(0, 0, 0));
        lblEngNumber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblEngNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblEngNumber.setText("Eng Number:");

        txtEngineNumber.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtEngineNumber.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtEngineNumber.setBorder(null);

        lblOdometerReading.setBackground(new java.awt.Color(0, 0, 0));
        lblOdometerReading.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblOdometerReading.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblOdometerReading.setText("Odometer Reading:");

        txtOdometerReading.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtOdometerReading.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtOdometerReading.setBorder(null);

        lblPrice.setBackground(new java.awt.Color(0, 0, 0));
        lblPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPrice.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPrice.setText("Price:");

        txtPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPrice.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtPrice.setBorder(null);
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        lblManufactureYear.setBackground(new java.awt.Color(0, 0, 0));
        lblManufactureYear.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblManufactureYear.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufactureYear.setText("Manufacture Year:");

        txtManufactureYear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtManufactureYear.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtManufactureYear.setBorder(null);

        lblMaintenanceCertificate.setBackground(new java.awt.Color(0, 0, 0));
        lblMaintenanceCertificate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMaintenanceCertificate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMaintenanceCertificate.setText("Maintenance Certificate:");

        lblAvailable.setBackground(new java.awt.Color(0, 0, 0));
        lblAvailable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAvailable.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblAvailable.setText("Available:");

        btnSave.setBackground(new java.awt.Color(0, 0, 0));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 255, 255));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtCarType.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCarType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Hatchback", "Sedan", "SUV", "Crossover", "Convertible" }));
        txtCarType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarTypeActionPerformed(evt);
            }
        });

        txtValidOrNot.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtValidOrNot.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Valid", "Expired" }));
        txtValidOrNot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValidOrNotActionPerformed(evt);
            }
        });

        lblUsedByUber.setBackground(new java.awt.Color(0, 0, 0));
        lblUsedByUber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblUsedByUber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblUsedByUber.setText("Used By Uber:");

        txtUsedYesOrNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtUsedYesOrNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Yes", "No" }));
        txtUsedYesOrNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsedYesOrNoActionPerformed(evt);
            }
        });

        lblNoOfSeats.setBackground(new java.awt.Color(0, 0, 0));
        lblNoOfSeats.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblNoOfSeats.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblNoOfSeats.setText("No of Seats:");

        txtNoOfSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtNoOfSeats.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtNoOfSeats.setBorder(null);

        checkBoxAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxAvailableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblUsedByUber)
                                        .addGap(141, 141, 141)
                                        .addComponent(txtUsedYesOrNo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMaintenanceCertificate)
                                            .addComponent(lblAvailable))
                                        .addGap(62, 62, 62)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtValidOrNot, 0, 123, Short.MAX_VALUE)
                                            .addComponent(checkBoxAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPrice)
                                    .addComponent(lblCarType)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblModelNumber)
                                            .addComponent(lblColor))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblAvailableCity))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtModelNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                                    .addComponent(txtCarType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblManufacturedBy)
                                                    .addComponent(lblSerialNumber)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtEngineNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblManufactureYear)
                                                    .addComponent(lblOdometerReading)))))
                                    .addComponent(lblEngNumber)
                                    .addComponent(lblNoOfSeats))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtManufactureYear)
                                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(txtManufacturedBy, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(txtAvailableCity, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(txtOdometerReading, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEnterDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterDetails)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCarType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCarType)
                        .addComponent(lblManufacturedBy)
                        .addComponent(txtManufacturedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelNumber)
                    .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSerialNumber)
                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailableCity)
                    .addComponent(txtAvailableCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEngNumber)
                    .addComponent(txtEngineNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOdometerReading)
                    .addComponent(txtOdometerReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufactureYear)
                    .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoOfSeats)
                    .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaintenanceCertificate)
                    .addComponent(txtValidOrNot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailable)
                    .addComponent(btnSave)
                    .addComponent(checkBoxAvailable))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsedByUber)
                    .addComponent(txtUsedYesOrNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String carType = txtCarType.getSelectedItem().toString();
        if (carType == null || carType.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select a car type!");
            return;
        }
        String manufacturedBy = txtManufacturedBy.getText();
        if (manufacturedBy == null || manufacturedBy.equals("")) {
            JOptionPane.showMessageDialog(null, "Brand Name can't be empty!");
            return;
        }
        String modelNumber = txtModelNumber.getText();
        if (modelNumber == null || modelNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Model Number can't be empty!");
            return;
        }
        String serialNumber = txtSerialNumber.getText();
        if (serialNumber == null || serialNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Serial Number can't be empty!");
            return;
        }
        String color = txtColor.getText();
        if (color == null || color.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a color!");
            return;
        }
        String availableCity = txtAvailableCity.getText();
        if (availableCity == null || availableCity.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid City Name!");
            return;
        }
        String engineNumber = txtEngineNumber.getText();
        if (engineNumber == null || engineNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Engine Number can't be empty!");
            return;
        }
        String odometerReading = txtOdometerReading.getText();
        try{
            Integer.parseInt(odometerReading);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a integer value for Odometer Reading");
            return;
        }
        /*String minSeats = txtMinSeats.getText();
        try{
            Integer.parseInt(minSeats);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a integer value for Minimum Seats");
            return;
        }
        String maxSeats = txtMaxSeats.getText();
        try{
            Integer.parseInt(maxSeats);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a integer value for Maximum Seats");
            return;
        }*/
        String no_seats = txtNoOfSeats.getText();
        try{
            Integer.parseInt(no_seats);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a integer value for No of Seats");
            return;
        }
        String price = txtPrice.getText();
        try{
            Double.parseDouble(price);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a Double value for Price");
            return;
        }
        String manufactureYear = txtManufactureYear.getText();
        try{
            Integer.parseInt(manufactureYear);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a Integer value for Manufactured Year");
            return;
        }
        String maintenanceCertificate = txtValidOrNot.getSelectedItem().toString();
        if (maintenanceCertificate == null || maintenanceCertificate.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select if maintenance certificate is valid or expired!");
            return;
        }
        /*String availablity = txtYesOrNo.getSelectedItem().toString();
        if (availablity == null || availablity.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select if the car is available or not!");
            return;
        }*/
        String usedByUber = txtUsedYesOrNo.getSelectedItem().toString();
        if (usedByUber == null || usedByUber.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(null, "Please select if it is used by uber or not!");
            return;
        }
        DateFormat dateformat = new SimpleDateFormat("MM:dd:YYYY");
        Date dateObj = new Date();
        String j = dateformat.format(dateObj);
        /*String dateValue = txtDate.getText();
        if (dateValue == null || dateValue.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please Enter Date in MM:DD:YYYY Format!");
            return;
        }*/
        
        CarDetails carDetails = carDirectory.addCarDetails();
        carDetails.setCarType(carType);
        carDetails.setManufacturedBy(manufacturedBy);
        carDetails.setModelNumber(modelNumber);
        carDetails.setSerialNumber(serialNumber);
        carDetails.setColor(color);
        carDetails.setAvailableCity(availableCity);
        carDetails.setEngineNumber(engineNumber);
        carDetails.setOdometerReading(Integer.parseInt(odometerReading));
        //carDetails.setMin_seats(Integer.parseInt(minSeats));
        //carDetails.setMax_seats(Integer.parseInt(maxSeats));
        carDetails.setNo_seats(Integer.parseInt(no_seats));
        carDetails.setPrice(Double.parseDouble(price));
        carDetails.setManufactureYear(Integer.parseInt(manufactureYear));
        carDetails.setMaintenance_certificate(maintenanceCertificate);
        carDetails.setAvailablity(checkboxAvail);
        carDetails.setUsedByUber(usedByUber);
        carDetails.setDate(j);
        
        JOptionPane.showMessageDialog(null, "Details Added Successfully!");
        
        txtCarType.setSelectedItem("Select");
        txtManufacturedBy.setText("");
        txtModelNumber.setText("");
        txtSerialNumber.setText("");
        txtColor.setText("");
        txtAvailableCity.setText("");
        txtEngineNumber.setText("");
        txtOdometerReading.setText("");
        //txtMinSeats.setText("");
        //txtMaxSeats.setText("");
        txtNoOfSeats.setText("");
        txtPrice.setText("");
        txtManufactureYear.setText("");
        txtValidOrNot.setSelectedItem("Select");
        //txtYesOrNo.setSelectedItem("Select");
        txtUsedYesOrNo.setSelectedItem("Select");
        //txtDate.setText("");
        checkBoxAvailable.setSelected(Boolean.parseBoolean(""));
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        startCardLayout.remove(this);
        CardLayout layout = (CardLayout) startCardLayout.getLayout();
        layout.previous(startCardLayout);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtCarTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarTypeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtCarTypeActionPerformed

    private void txtValidOrNotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValidOrNotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValidOrNotActionPerformed

    private void txtUsedYesOrNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsedYesOrNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsedYesOrNoActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void checkBoxAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxAvailableActionPerformed
        // TODO add your handling code here:
        if(checkBoxAvailable.isSelected())
        {
            checkboxAvail = "Yes";
        }
        else
        {
            checkboxAvail = "No";
        }
    }//GEN-LAST:event_checkBoxAvailableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnAvailableYesOrNo;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup btnValidOrExpired;
    private javax.swing.JCheckBox checkBoxAvailable;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblAvailableCity;
    private javax.swing.JLabel lblCarType;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblEngNumber;
    private javax.swing.JLabel lblEnterDetails;
    private javax.swing.JLabel lblMaintenanceCertificate;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblManufacturedBy;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblOdometerReading;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblUsedByUber;
    private javax.swing.JTextField txtAvailableCity;
    private javax.swing.JComboBox txtCarType;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtEngineNumber;
    private javax.swing.JTextField txtManufactureYear;
    private javax.swing.JTextField txtManufacturedBy;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtNoOfSeats;
    private javax.swing.JTextField txtOdometerReading;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JComboBox txtUsedYesOrNo;
    private javax.swing.JComboBox txtValidOrNot;
    // End of variables declaration//GEN-END:variables
}
